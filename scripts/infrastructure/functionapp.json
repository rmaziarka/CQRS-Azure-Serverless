{
    "$schema": "https://schema.management.azure.com/schemas/2018-05-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "variables": {
      "location": "[resourceGroup().location]",
      "sharedServicesName": "[replace(toLower(resourceGroup().name),'-', '')]",
      "appServicePlanName": "[variables('sharedServicesName')]",
      "applicationInsightsName": "[variables('sharedServicesName')]",
      "keyVaultName": "[variables('sharedServicesName')]",
      "functionAppName": "[concat(toLower(resourceGroup().name),'-','library')]",
      "keyVaultStorageAccountSecretName": "StorageAccountConnectionString",
      "keyVaultCosmosDBSecretName": "AzureCosmosDBConnection"
    },
    "resources": [
      {
        "type": "Microsoft.Web/serverfarms",
        "apiVersion": "2018-02-01",
        "name": "[variables('appServicePlanName')]",
        "location": "[variables('location')]",
        "sku": {
          "name": "Y1",
          "tier": "Dynamic"
        },
        "properties": {
          "name": "[variables('appServicePlanName')]",
          "computeMode": "Dynamic",
          "immutabilityPeriodSinceCreationInDays" : 10
        }
      },
      {
        "apiVersion": "2015-05-01",
        "kind": "applicationInsights",
        "name": "[variables('applicationInsightsName')]",
        "type": "microsoft.insights/components",
        "location": "[variables('location')]",
        "tags": {
          "[concat('hidden-link:', resourceGroup().id, '/providers/Microsoft.Web/sites/', variables('applicationInsightsName'))]": "Resource"
        },
        "properties": {
          "ApplicationId": "[variables('applicationInsightsName')]",
          "Application_Type": "web"
        }
      },
      {
        "apiVersion": "2016-08-01",
        "type": "Microsoft.Web/sites",
        "name": "[variables('functionAppName')]",
        "location": "[variables('location')]",
        "kind": "functionapp",
        "properties": {
          "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('appServicePlanName'))]"
        },
        "identity": {
            "type": "SystemAssigned"
        },
        "dependsOn": [
          "[resourceId('Microsoft.Web/serverfarms', variables('appServicePlanName'))]"
        ],
        "resources":[
          {
            "apiVersion": "2015-08-01",
            "name": "web",
            "type": "config",
            "dependsOn": [
              "[resourceId('Microsoft.Web/Sites', variables('functionAppName'))]"
            ],
            "properties": {
              "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('appServicePlanName'))]"
            }
          },
          {
            "apiVersion": "2015-08-01",
            "type": "config",
            "name": "appsettings",         
            "dependsOn": [
              "[resourceId('Microsoft.Web/sites', variables('functionAppName'))]",
              "[resourceId('Microsoft.KeyVault/vaults/accessPolicies', variables('keyVaultName'), 'add')]"
            ],
            "properties": {
              "AzureWebJobsDashboard": "[concat('@Microsoft.KeyVault(SecretUri=', reference(resourceId('Microsoft.KeyVault/vaults/secrets', variables('keyVaultName'), variables('keyVaultStorageAccountSecretName')),'2015-06-01').secretUriWithVersion, ')')]",
              "AzureWebJobsStorage": "[concat('@Microsoft.KeyVault(SecretUri=', reference(resourceId('Microsoft.KeyVault/vaults/secrets', variables('keyVaultName'), variables('keyVaultStorageAccountSecretName')),'2015-06-01').secretUriWithVersion, ')')]",
              "WEBSITE_CONTENTAZUREFILECONNECTIONSTRING": "[concat('@Microsoft.KeyVault(SecretUri=', reference(resourceId('Microsoft.KeyVault/vaults/secrets', variables('keyVaultName'), variables('keyVaultStorageAccountSecretName')),'2015-06-01').secretUriWithVersion, ')')]",
              "AzureCosmosDBConnection": "[concat('@Microsoft.KeyVault(SecretUri=', reference(resourceId('Microsoft.KeyVault/vaults/secrets', variables('keyVaultName'), variables('keyVaultCosmosDBSecretName')),'2015-06-01').secretUriWithVersion, ')')]",
              "WEBSITE_CONTENTSHARE": "[toLower(variables('functionAppName'))]",
              "FUNCTIONS_EXTENSION_VERSION": "~2",
              "APPINSIGHTS_INSTRUMENTATIONKEY": "[reference(resourceId('microsoft.insights/components/', variables('applicationInsightsName')), '2015-05-01').InstrumentationKey]",
              "FUNCTIONS_WORKER_RUNTIME": "dotnet"
            }
          }
        ]
      },
      {
          "type": "Microsoft.KeyVault/vaults/accessPolicies",
          "name": "[concat(variables('keyVaultName'), '/add')]",
          "apiVersion": "2016-10-01",
          "properties": {
              "accessPolicies": [
                  {
                      "objectId": "[reference(variables('functionAppName'), '2016-08-01', 'Full').identity.principalId]",
                      "tenantId": "[reference(variables('functionAppName'), '2016-08-01', 'Full').identity.tenantId]",
                      "permissions": {
                        "keys": [],
                        "secrets": [
                          "Get"
                        ]
                      }
                  }
              ]
          },         
          "dependsOn": [
            "[resourceId('Microsoft.Web/sites', variables('functionAppName'))]"
          ]
      }
    ]
  }
